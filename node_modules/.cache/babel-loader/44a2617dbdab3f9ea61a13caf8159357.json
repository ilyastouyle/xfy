{"ast":null,"code":"var _jsxFileName = \"/var/www/html/xfy/src/App.js\";\nimport React from 'react';\nimport './stylesheets/App.css';\nlet curves = [];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.newCurve = () => {\n      var cindex = curves.length;\n      var curve = React.createElement(\"span\", {\n        cindex: curves.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Curve \", curves.length, \" \"), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: () => this.delete(curve.props.cindex),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \" Delete \"));\n      curves.push(curve);\n      this.setState({\n        curves: curves\n      });\n    };\n\n    this.delete = arg => {\n      console.log(arg);\n      this.setState({\n        curves: curves\n      });\n    };\n\n    this.state = {\n      curves: curves\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, curves), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.newCurve,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" Add Curve \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/xfy/src/App.js"],"names":["React","curves","App","Component","constructor","props","newCurve","cindex","length","curve","delete","push","setState","arg","console","log","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AAEA,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAInBC,QAJmB,GAIR,MAAM;AAChB,UAAIC,MAAM,GAAGN,MAAM,CAACO,MAApB;AACA,UAAIC,KAAK,GAAG;AAAM,QAAA,MAAM,EAAER,MAAM,CAACO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUP,MAAM,CAACO,MAAjB,MADS,EAET;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAE,MAAM,KAAKE,MAAL,CAAYD,KAAK,CAACJ,KAAN,CAAYE,MAAxB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFS,CAAZ;AAIAN,MAAAA,MAAM,CAACU,IAAP,CAAYF,KAAZ;AACA,WAAKG,QAAL,CAAc;AAACX,QAAAA,MAAM,EAAEA;AAAT,OAAd;AACA,KAZkB;;AAAA,SAanBS,MAbmB,GAaTG,GAAD,IAAS;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKD,QAAL,CAAc;AAACX,QAAAA,MAAM,EAAEA;AAAT,OAAd;AACA,KAhBkB;;AAElB,SAAKe,KAAL,GAAa;AAACf,MAAAA,MAAM,EAAEA;AAAT,KAAb;AACA;;AAcDgB,EAAAA,MAAM,GAAE;AACP,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEhB,MADF,CADK,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIL;AAAQ,MAAA,OAAO,EAAE,KAAKK,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJK,CAAR;AAMA;;AAzBgC;;AA4BlC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport './stylesheets/App.css';\n\nlet curves = [];\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\t\n\t\tthis.state = {curves: curves};\n\t}\n\tnewCurve = () => {\n\t\tvar cindex = curves.length;\n\t\tvar curve = <span cindex={curves.length}>\n\t\t\t\t\t<p>Curve {curves.length} </p>\n\t\t\t\t\t<a href=\"#\" onClick={() => this.delete(curve.props.cindex)}> Delete </a>\n\t\t\t\t</span>;\n\t\tcurves.push(curve);\n\t\tthis.setState({curves: curves});\n\t}\n\tdelete = (arg) => {\n\t\tconsole.log(arg);\n\t\tthis.setState({curves: curves});\n\t}\n\trender(){\n\t\treturn (<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{curves}\n\t\t\t\t\t</div><br/>\n\t\t\t\t\t<button onClick={this.newCurve}> Add Curve </button>\n\t\t\t\t</div>);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}