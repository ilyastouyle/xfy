1c635ce2e759ba069d86b2e69f7a366b
"use strict";

var _interopRequireDefault = require("/var/www/html/xfy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactFontawesome = require("@fortawesome/react-fontawesome");

var _freeSolidSvgIcons = require("@fortawesome/free-solid-svg-icons");

var _Library = _interopRequireDefault(require("./Library"));

require("./stylesheets/App.css");

var _jsxFileName = "/var/www/html/xfy/src/App.js";
let curves = [[], []],
    animations = [];

class Curve2d {
  constructor(X, Y, color, width) {
    this.X = X;
    this.Y = Y;
    this.color = color;
    this.width = width;
  }

}

class Animation {
  constructor(type, duration, fps, curvesIndexes) {
    this.type = type;
    this.animcurves = []; //Animation Curves

    for (var i = 0; i < curvesIndexes.length; i++) {
      this.animcurves.push(curves[curvesIndexes[i]]);
    }

    this.duration = duration;
    this.fps = fps;
  }

}

; //Wrapper Curve: Template for Functional and Parameterized Curves

class WrCurve extends _react.default.Component {
  constructor(props) {
    super(props);

    this.previous = () => {
      this.setState({
        cEdit: (this.state.cEdit - 1) % 5,
        tempF: this.state.tempF.map((v, i) => i === this.state.cEdit - 1 ? this.input.value : v)
      });
      this.input.value = "";
    };

    this.next = () => {
      this.setState({
        cEdit: (this.state.cEdit + 1) % 5,
        tempF: this.state.tempF.map((v, i) => i === this.state.cEdit - 1 ? this.input.value : v)
      }, () => {
        if (this.props.type === 0) {
          //curves[this.props.type][this.props.cindex].X = Functions.subdivide([this.state.tempF]);
          if (!!this.state.tempF[1] && !!this.state.tempF[2]) {
            curves[this.props.type][this.props.cindex].X = _Library.default.subdivide(parseFloat(this.state.tempF[1]), parseFloat(this.state.tempF[2]), 100);

            for (let i = 0; i < curves[this.props.type][this.props.cindex].X.length; i++) {
              let x = curves[this.props.type][this.props.cindex].X[i];
              curves[this.props.type][this.props.cindex].Y[i] = eval(_Library.default.evaluateInput(this.state.tempF[0]));
            }
          }
        }
      });
      this.input.value = "";
    };

    this.edit = () => {
      this.setState({
        cEdit: 1
      });
    };

    this.save = () => {
      this.setState({
        cEdit: 0,
        tempF: this.state.tempF.map((v, i) => i === this.state.cEdit - 1 ? this.input.value : v)
      });
    };

    this.inputHandler = e => {
      if (e.which === 13) this.next();
    };

    this.state = {
      cEdit: 0,
      tempF: [null, null, null, null]
    };
  }

  componentDidMount() {
    window.MathJax.Hub.Queue(["Typeset", window.MathJax.Hub, "parameters"]);
  }

  componentDidUpdate() {
    this.input.focus();
    this.input.value = this.state.tempF[this.state.cEdit - 1];
  }

  render() {
    let inputClasses = [],
        placeholders = [],
        labels = [];

    if (this.props.type === 0) {
      inputClasses = ["f", "selected f", "selected value", "selected value", "selected value"];
      placeholders = ["cos(sin(x))", "cos(sin(x))", "-1", "1", "100"];
      labels = ["f_{ " + (this.props.cindex + 1) + " }(x)", "a", "b", "n"];
    } else {
      inputClasses = ["x", "selected x", "selected y", "selected value", "selected value"];
      placeholders = ["cos(t)", "cos(t)", "sin(t)", "-4", "4"];
      labels = ["x_{ " + (this.props.cindex + 1) + " }(t)", "y_{ " + (this.props.cindex + 1) + " }(t)", "a", "b"];
    }

    return _react.default.createElement("span", {
      className: "input",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 82
      },
      __self: this
    }, _react.default.createElement("span", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 83
      },
      __self: this
    }, _react.default.createElement("button", {
      className: "delete",
      onClick: () => {
        this.props.delete([this.props.type, this.props.cindex]);
      },
      style: {
        display: this.state.cEdit ? "none" : "inline"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 84
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faCut,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 84
      },
      __self: this
    })), _react.default.createElement("button", {
      className: "dropdown",
      style: {
        display: this.state.cEdit ? "none" : "inline"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 85
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faAngleDown,
      size: "lg",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 85
      },
      __self: this
    })), _react.default.createElement("button", {
      className: "save",
      onClick: this.save,
      style: {
        display: this.state.cEdit ? "inline" : "none"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 86
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faSave,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 86
      },
      __self: this
    })), _react.default.createElement("button", {
      className: "previous",
      onClick: this.previous,
      style: {
        display: this.state.cEdit > 1 ? "inline" : "none"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 87
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faAngleLeft,
      size: "lg",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 87
      },
      __self: this
    })), _react.default.createElement("label", {
      style: {
        display: this.state.cEdit < 2 ? "inline" : "none"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 88
      },
      __self: this
    }, "\\(", labels[0], "\\)"), _react.default.createElement("label", {
      style: {
        display: this.state.cEdit === 2 ? "inline" : "none"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 89
      },
      __self: this
    }, "\\(", labels[1], "\\)"), _react.default.createElement("label", {
      style: {
        display: this.state.cEdit === 3 ? "inline" : "none"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 90
      },
      __self: this
    }, "\\(", labels[2], "\\)"), _react.default.createElement("label", {
      style: {
        display: this.state.cEdit === 4 ? "inline" : "none"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 91
      },
      __self: this
    }, "\\(", labels[3], "\\)"), _react.default.createElement("input", {
      className: inputClasses[this.state.cEdit],
      type: "text",
      ref: input => {
        this.input = input;
      },
      onKeyUp: this.inputHandler,
      placeholder: placeholders[this.state.cEdit],
      onChange: () => {},
      __source: {
        fileName: _jsxFileName,
        lineNumber: 92
      },
      __self: this
    }), _react.default.createElement("button", {
      className: "next",
      onClick: this.next,
      style: {
        display: this.state.cEdit ? "inline" : "none"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 93
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faAngleRight,
      size: "lg",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 93
      },
      __self: this
    })), _react.default.createElement("button", {
      className: "edit",
      onClick: this.edit,
      style: {
        display: this.state.cEdit ? "none" : "inline"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 94
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faPencilAlt,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 94
      },
      __self: this
    })), _react.default.createElement("input", {
      className: "jscolor",
      value: "#3A539B",
      onChange: () => {},
      __source: {
        fileName: _jsxFileName,
        lineNumber: 95
      },
      __self: this
    })));
  }

}

class Settings extends _react.default.Component {
  constructor(props) {
    super(props);
    this.state = {};
  }

  render() {
    return _react.default.createElement("div", {
      id: "settWrapper",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 107
      },
      __self: this
    }, _react.default.createElement("nav", {
      id: "centerControls",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 108
      },
      __self: this
    }, _react.default.createElement("h4", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 109
      },
      __self: this
    }, "Settings"), _react.default.createElement("button", {
      onClick: this.newCurve,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 110
      },
      __self: this
    }, " Reset "), _react.default.createElement("button", {
      onClick: this.newPCurve,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 111
      },
      __self: this
    }, " Save ")), _react.default.createElement("div", {
      id: "fsettings",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 113
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "row",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 114
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "column",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 115
      },
      __self: this
    }, _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 116
      },
      __self: this
    }, "Curve thickness: "), _react.default.createElement("span", {
      className: "scontainer",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 117
      },
      __self: this
    }, _react.default.createElement("span", {
      className: "thickness",
      id: "thn",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 117
      },
      __self: this
    })), _react.default.createElement("span", {
      className: "scontainer selected",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 118
      },
      __self: this
    }, _react.default.createElement("span", {
      className: "thickness",
      id: "md",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 118
      },
      __self: this
    })), _react.default.createElement("span", {
      className: "scontainer",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 119
      },
      __self: this
    }, _react.default.createElement("span", {
      className: "thickness",
      id: "thk",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 119
      },
      __self: this
    }))), _react.default.createElement("div", {
      className: "column",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 121
      },
      __self: this
    }, _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 122
      },
      __self: this
    }, "Divide into: "), _react.default.createElement("input", {
      type: "text",
      id: "divide",
      placeholder: "20",
      maxLength: "3",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 123
      },
      __self: this
    }), _react.default.createElement("button", {
      id: "divideb",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 123
      },
      __self: this
    }, "Divide"))), _react.default.createElement("div", {
      className: "row",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 126
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "column",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 127
      },
      __self: this
    }, _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 128
      },
      __self: this
    }, "Dash size & spacing: "), _react.default.createElement("input", {
      id: "dash",
      placeholder: "3",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 129
      },
      __self: this
    }), " &", _react.default.createElement("input", {
      id: "spacing",
      placeholder: "2",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 130
      },
      __self: this
    })), _react.default.createElement("div", {
      className: "column",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 132
      },
      __self: this
    }, _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 133
      },
      __self: this
    }, "Duration: "), _react.default.createElement("input", {
      type: "text",
      id: "duration",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 134
      },
      __self: this
    }), " seconds")), _react.default.createElement("div", {
      className: "row",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 137
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "column",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 138
      },
      __self: this
    }, _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 139
      },
      __self: this
    }, "Animation style: "), _react.default.createElement("div", {
      className: "container",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 140
      },
      __self: this
    }, _react.default.createElement("button", {
      className: "anim",
      id: "noanim",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 141
      },
      __self: this
    }, "No animation"), _react.default.createElement("button", {
      className: "anim",
      id: "completeb",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 142
      },
      __self: this
    }, "Complete"), _react.default.createElement("button", {
      className: "anim",
      id: "chase",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 143
      },
      __self: this
    }, "Chase"), _react.default.createElement("button", {
      className: "anim",
      id: "morph",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 144
      },
      __self: this
    }, "Morph"), _react.default.createElement("button", {
      className: "anim",
      id: "rotate",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 145
      },
      __self: this
    }, "Rotate"), _react.default.createElement("button", {
      className: "anim",
      id: "recompose",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 146
      },
      __self: this
    }, "Recompose"), _react.default.createElement("button", {
      className: "anim",
      id: "mover",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 147
      },
      __self: this
    }, "Scroll right"), _react.default.createElement("button", {
      className: "anim",
      id: "movel",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 148
      },
      __self: this
    }, "Scroll left"), _react.default.createElement("button", {
      className: "anim",
      id: "moveu",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 149
      },
      __self: this
    }, "Scroll up"), _react.default.createElement("button", {
      className: "anim",
      id: "moved",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 150
      },
      __self: this
    }, "Scroll down")))), _react.default.createElement("div", {
      className: "row",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 154
      },
      __self: this
    }, _react.default.createElement("div", {
      className: "column",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 155
      },
      __self: this
    }, _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 156
      },
      __self: this
    }, "Opaque")))));
  }

}

class Canvas extends _react.default.Component {
  constructor(props) {
    super(props);

    this.play = () => {
      let A = this.state;
      const canvas = this.refs.canvas;
      const context = canvas.getContext("2d");
      this.setState((state, props) => {
        let newState = state; //Temporary xstep, ystep

        let tstep = _Library.default.Maximum([_Library.default.xstep([...curves[0], ...curves[1]], A.drawnSteps.nbSteps.x, A.drawnSteps.offStepSteps.x), _Library.default.ystep([...curves[0], ...curves[1]], A.drawnSteps.nbSteps.y, A.drawnSteps.offStepSteps.y)]);

        console.log("xstep: " + _Library.default.xstep([...curves[0], ...curves[1]], A.drawnSteps.nbSteps.x, A.drawnSteps.offStepSteps.x));
        console.log("ystep: " + _Library.default.ystep([...curves[0], ...curves[1]], A.drawnSteps.nbSteps.y, A.drawnSteps.offStepSteps.y));
        newState.steps.x = [tstep, tstep];
        newState.steps.y = [tstep, tstep];
        return newState;
      }, () => {
        console.log("Final step: " + A.steps.x[0]);
        this.drawFrame();

        for (let i = 0; i < curves[0].length; i++) {
          _Library.default.drawCurve(3, curves[0][i].X, curves[0][i].Y, A.steps.x, A.steps.y, [A.drawnSteps.stepSize.x, A.drawnSteps.stepSize.y], canvas.width / 2, canvas.height / 2, "#000000", context);
        }
      });
    };

    this.drawFrame = () => {
      let A = this.state;
      const canvas = this.refs.canvas;
      const context = canvas.getContext("2d");
      context.clearRect(0, 0, canvas.width, canvas.height);

      _Library.default.drawYAxis(canvas.width / 2, A.colors.axeColor, canvas.height, A.widths.axeWidth, context);

      _Library.default.drawXAxis(canvas.height / 2, A.colors.axeColor, canvas.width, A.widths.axeWidth, context);

      _Library.default.drawOnX(canvas.width / 2, canvas.height / 2, A.steps.x[0], A.drawnSteps.nbSteps.x[0], A.drawnSteps.stepSize.x[0], A.colors.wireColor, A.widths.dashWidth.x[0], A.widths.wireWidth[0], A.font.x[0], context);

      _Library.default.drawOnY(canvas.width / 2, canvas.height / 2, A.steps.y[0], A.drawnSteps.nbSteps.y[0], A.drawnSteps.stepSize.y[0], A.colors.wireColor, A.widths.dashWidth.y[0], A.widths.wireWidth[0], A.font.y[0], context);

      _Library.default.drawOnMinusX(canvas.width / 2, canvas.height / 2, A.steps.x[1], A.drawnSteps.nbSteps.x[0], A.drawnSteps.stepSize.x[1], A.colors.wireColor, A.widths.dashWidth.x[1], A.widths.wireWidth[0], A.font.x[1], context);

      _Library.default.drawOnMinusY(canvas.width / 2, canvas.height / 2, A.steps.y[1], A.drawnSteps.nbSteps.y[1], A.drawnSteps.stepSize.y[1], A.colors.wireColor, A.widths.dashWidth.y[1], A.widths.wireWidth[0], A.font.y[1], context);
    };

    this.state = {
      colors: {
        axeColor: "#000000",
        wireColor: "#cdd1d3",
        dashColor: "#1F3A93"
      },
      widths: {
        axeWdith: [1, 1],
        wireWidth: [1, 1],
        dashWidth: {
          x: [2, 2],
          y: [2, 2]
        }
      },
      drawnSteps: {
        nbSteps: {
          x: [12, 12],
          y: [36, 36]
        },
        offStepSteps: {
          x: [3, 3],
          y: [2, 2]
        },
        stepSize: {
          x: [35, 35],
          //for positive then negative x
          y: [35, 35] //for positive then negative y

        }
      },
      font: {
        x: ["11px Arial", "11px Arial"],
        y: ["11px Arial", "11px Arial"]
      },
      steps: {
        x: [.25, .25],
        y: [.25, .25]
      }
    };
  }

  componentDidMount() {
    this.setState({
      canvas: this.refs.canvasW
    });
  }

  componentDidUpdate() {//this.drawFrame();
    //Functions.drawCurve(2, [-3, -2, -1, 0, 1, 2, 3], [9, 4, 1, 0, 1, 4, 9], [1, 1], [1, 1], [A.drawnSteps.stepSize.x, A.drawnSteps.stepSize.y], canvas.width/2, canvas.height/2, "#000000", context);
  }

  render() {
    if (!this.state.canvas) {
      return _react.default.createElement("div", {
        id: "canvasWrapper",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 249
        },
        __self: this
      }, _react.default.createElement(LControls, {
        play: this.play,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 250
        },
        __self: this
      }), _react.default.createElement("div", {
        id: "canvas",
        ref: "canvasW",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 251
        },
        __self: this
      }));
    } else {
      return _react.default.createElement("div", {
        id: "canvasWrapper",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 255
        },
        __self: this
      }, _react.default.createElement(LControls, {
        play: this.play,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 256
        },
        __self: this
      }), _react.default.createElement("div", {
        id: "canvas",
        ref: "canvasW",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 257
        },
        __self: this
      }, _react.default.createElement("canvas", {
        ref: "canvas",
        id: "graph",
        width: this.state.canvas.clientWidth,
        height: this.state.canvas.clientHeight,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 258
        },
        __self: this
      }), _react.default.createElement("canvas", {
        id: "toplayer",
        width: this.state.canvas.clientWidth,
        height: this.state.canvas.clientHeight,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 259
        },
        __self: this
      })));
    }
  }

}

class LControls extends _react.default.Component {
  constructor(props) {
    super(props);
    this.state = {};
  }

  render() {
    return _react.default.createElement("nav", {
      id: "leftControls",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 273
      },
      __self: this
    }, _react.default.createElement("span", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 274
      },
      __self: this
    }, _react.default.createElement("h4", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 275
      },
      __self: this
    }, "Animation 1 ")), _react.default.createElement("nav", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 277
      },
      __self: this
    }, _react.default.createElement("button", {
      onClick: this.props.play,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 278
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faPlay,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 278
      },
      __self: this
    })), _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 279
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faPause,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 279
      },
      __self: this
    })), _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 280
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faStop,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 280
      },
      __self: this
    }))), _react.default.createElement("span", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 282
      },
      __self: this
    }, _react.default.createElement("h4", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 283
      },
      __self: this
    }, "4 seconds ")), _react.default.createElement("nav", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 285
      },
      __self: this
    }, _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 286
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faSearchPlus,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 286
      },
      __self: this
    })), _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 287
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faSearchMinus,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 287
      },
      __self: this
    })), _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 288
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faArrowLeft,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 288
      },
      __self: this
    })), _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 289
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faArrowRight,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 289
      },
      __self: this
    })), _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 290
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faArrowUp,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 290
      },
      __self: this
    })), _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 291
      },
      __self: this
    }, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faArrowDown,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 291
      },
      __self: this
    }))), _react.default.createElement("nav", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 293
      },
      __self: this
    }, _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 294
      },
      __self: this
    }, _react.default.createElement("b", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 294
      },
      __self: this
    }, "Save")), _react.default.createElement("button", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 295
      },
      __self: this
    }, _react.default.createElement("b", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 295
      },
      __self: this
    }, "Export"))));
  }

}

class RControls extends _react.default.Component {
  constructor(props) {
    super(props);
    this.state = {};
  }

  render() {
    return _react.default.createElement("nav", {
      id: "rightControls",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 308
      },
      __self: this
    }, _react.default.createElement("b", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 309
      },
      __self: this
    }, "Curves"));
  }

}

class ParamWrapper extends _react.default.Component {
  constructor(props) {
    super(props);

    this.newCurve = () => {
      //var curve = <Curve cindex={curves.length} delete={this.delete} />;
      curves[0].push(new Curve2d([], [], "#FFFFFF", 2));
      this.setState({
        curves: curves
      });
    };

    this.newPCurve = () => {
      curves[1].push(new Curve2d([], [], "#FFFFFF", 2));
      this.setState({
        curves: curves
      });
    };

    this.delete = arg => {
      curves[arg[0]].splice(arg[1], 1);
      this.setState({
        curves: curves
      });
    };

    this.state = {
      curves: curves
    };
  }

  render() {
    return _react.default.createElement("div", {
      id: "paramWrapper",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 334
      },
      __self: this
    }, _react.default.createElement(RControls, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 335
      },
      __self: this
    }), _react.default.createElement("div", {
      id: "parameters",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 336
      },
      __self: this
    }, _react.default.createElement("button", {
      id: "addc",
      onClick: this.newCurve,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 337
      },
      __self: this
    }, " ", _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faPlus,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 337
      },
      __self: this
    }), " FCurve "), _react.default.createElement("button", {
      id: "addp",
      onClick: this.newPCurve,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 338
      },
      __self: this
    }, " ", _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeSolidSvgIcons.faPlus,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 338
      },
      __self: this
    }), " PCurve "), _react.default.createElement("div", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 339
      },
      __self: this
    }, curves[0].map((el, ind) => _react.default.createElement(WrCurve, {
      key: ind,
      type: 0,
      cindex: ind,
      delete: this.delete,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 340
      },
      __self: this
    })), curves[1].map((el, ind) => _react.default.createElement(WrCurve, {
      key: ind,
      type: 1,
      cindex: ind,
      delete: this.delete,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 341
      },
      __self: this
    }))), _react.default.createElement("br", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 342
      },
      __self: this
    })));
  }

}

class App extends _react.default.Component {
  constructor(props) {
    super(props);
    curves[0].push(new Curve2d([], [], "#FFFFFF", 2));
    this.state = {
      curves: curves
    };
  }

  render() {
    return _react.default.createElement("div", {
      id: "main",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 355
      },
      __self: this
    }, _react.default.createElement("div", {
      id: "core",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 356
      },
      __self: this
    }, _react.default.createElement(Canvas, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 357
      },
      __self: this
    }), _react.default.createElement(Settings, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 358
      },
      __self: this
    }), _react.default.createElement(ParamWrapper, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 359
      },
      __self: this
    })));
  }

}

var _default = App;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,